name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        type: string

env:
  ZIG_VERSION: 0.15.2

jobs:
  build-release:
    name: Build release for ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: linux-x86_64
            os: ubuntu-latest
            artifact_name: zarc
            asset_name: zarc-linux-x86_64
          - target: linux-aarch64
            os: ubuntu-latest
            artifact_name: zarc
            asset_name: zarc-linux-aarch64
          - target: windows-x86_64
            os: ubuntu-latest
            artifact_name: zarc.exe
            asset_name: zarc-windows-x86_64.exe
          - target: macos-x86_64
            os: macos-13  # Intel Mac
            artifact_name: zarc
            asset_name: zarc-macos-x86_64
          - target: macos-aarch64
            os: macos-latest  # Apple Silicon
            artifact_name: zarc
            asset_name: zarc-macos-aarch64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: mlugg/setup-zig@v1
        with:
          version: ${{ env.ZIG_VERSION }}

      - name: Run tests
        run: zig build test --summary all

      - name: Build release
        run: zig build build-${{ matrix.target }} -Doptimize=ReleaseFast

      - name: Create archive (Unix)
        if: runner.os != 'Windows'
        run: |
          cd zig-out/bin
          tar czf ${{ matrix.asset_name }}.tar.gz zarc-${{ matrix.target }}
          sha256sum ${{ matrix.asset_name }}.tar.gz > ${{ matrix.asset_name }}.tar.gz.sha256

      - name: Create archive (Windows)
        if: matrix.target == 'windows-x86_64'
        run: |
          cd zig-out/bin
          mv zarc-${{ matrix.target }}.exe zarc.exe
          zip ${{ matrix.asset_name }}.zip zarc.exe
          sha256sum ${{ matrix.asset_name }}.zip > ${{ matrix.asset_name }}.zip.sha256

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.target }}
          path: |
            zig-out/bin/*.tar.gz
            zig-out/bin/*.zip
            zig-out/bin/*.sha256
          retention-days: 30

  create-release:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Display structure
        run: ls -R release-artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          generate_release_notes: true
          files: |
            release-artifacts/**/*.tar.gz
            release-artifacts/**/*.zip
            release-artifacts/**/*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
